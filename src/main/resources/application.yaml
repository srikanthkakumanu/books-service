spring:
  application:
    name: "${SPRING_APP_NAME:books-service}"
  devtools:
    restart:
      enabled: true

  threads: # Enable Virtual threads
    virtual:
      enabled: true

  # Jackson JSON mapper
  jackson:
    mapper:
      accept-case-insensitive-properties: true

  # JPA Hibernate
  # https://medium.com/@rihab.beji099/hibernate-schema-management-get-it-right-fast-spring-jpa-hibernate-ddl-auto-cfd86830daa2
  jpa:
    hibernate: # create/update/validate/create-drop/none
      ddl-auto: "${SPRING_JPA_HIBERNATE_DDL_AUTO:update}"
#      ddl-auto: "${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}"
    defer-datasource-initialization: false
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    show-sql: true
  sql:
    init:
      mode: always
  datasource:
    username: "${SPRING_DATASOURCE_USERNAME:theuser}"
    password: "${SPRING_DATASOURCE_PASSWORD:theuser}"
    url: "jdbc:mariadb://172.18.0.2:3306/booksdb?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC"

  # Flyway
  flyway:
    userDomain: bookadmin
    password: bookadmin
    sql-migration-prefix: V
    repeatable-sql-migration-prefix: R
    sql-migration-separator: __
    sql-migration-suffixes: .sql

#  # API Gateway
#  cloud:
#    gateway:
#      discovery:
#        locator:
#          enabled: true # Automatic Routing of API Gateway

  # Swagger/Open API
  # http://localhost:9151/swagger-ui/index.html
  doc:
    api-docs:
      path: /api-docs
    swagger-ui:
      operationsSorter: method
    show-actuator: true

server:
  port: 9151

api-key: apikey111,apikey222

# Eureka Service Discovery
eureka:
  client:
    serviceUrl:
      defaultZone: "${EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE:http://eureka-discovery-service:9111/eureka}"
#  instance:
#    preferIpAddress: true


# Logging config
logging:
  level:
    books: debug
    org.springframework.web: debug
    org:
      hibernate: ERROR
      hibernate.type.descriptor.sql: trace
  pattern:
    level: "${LOG_PATTERN_CONSOLE:%green(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %blue(-%5level) %red([%thread]) %magenta(---){faint} %yellow(%logger{15}) - %msg%n}"
#    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"
#  file:
#    name: logs/books-service.log
#    max-size: 10MB
#    max-history: 10
#  org.springframework:
#    web:
#      filter:
#        CommonsRequestLoggingFilter: DEBUG

# Actuator Config
management:
  endpoints:
    web:
      exposure:
        include: health, info, beans, env, metrics, auditevents, httptrace, loggers, threaddump
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true
    build:
      enabled: true
    git:
      enabled: true
      mode: full
    java:
      enabled: true
    os:
      enabled: true

info:
  app:
    name: "${spring.application.name}"
    #description: "Example Books microservice"
    #version: "1.0.0"
    #author: "Srikanth"
    #docs: "http://skakumanu.dev"

